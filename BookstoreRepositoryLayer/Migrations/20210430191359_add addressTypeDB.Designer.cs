// <auto-generated />
using System;
using BookstoreRepositoryLayer.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BookstoreRepositoryLayer.Migrations
{
    [DbContext(typeof(UserContext))]
    [Migration("20210430191359_add addressTypeDB")]
    partial class addaddressTypeDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BookstoreModelLayer.AddressType", b =>
                {
                    b.Property<int>("AddressTypeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CustomerAddressType")
                        .IsRequired();

                    b.HasKey("AddressTypeId");

                    b.ToTable("AddressDB");
                });

            modelBuilder.Entity("BookstoreModelLayer.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorName");

                    b.Property<string>("BookImage");

                    b.Property<string>("BookName");

                    b.Property<string>("Description");

                    b.Property<long>("Price");

                    b.Property<int>("Quantity");

                    b.Property<long>("UserId");

                    b.Property<int>("addedTocard");

                    b.HasKey("BookId");

                    b.ToTable("BookDB");
                });

            modelBuilder.Entity("BookstoreModelLayer.BookCart", b =>
                {
                    b.Property<int>("BookCartId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<int>("BookQuantity");

                    b.Property<int?>("OrderItemsOrderId");

                    b.Property<long>("UserId");

                    b.HasKey("BookCartId");

                    b.HasIndex("OrderItemsOrderId");

                    b.ToTable("CartDB");
                });

            modelBuilder.Entity("BookstoreModelLayer.CustomerDetails", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AddressTypeId");

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FullAddress")
                        .IsRequired();

                    b.Property<string>("Fullname")
                        .IsRequired();

                    b.Property<string>("Phone")
                        .IsRequired();

                    b.Property<string>("Pincode")
                        .IsRequired();

                    b.Property<string>("State")
                        .IsRequired();

                    b.Property<long>("UserId");

                    b.HasKey("CustomerId");

                    b.ToTable("CustomerDB");
                });

            modelBuilder.Entity("BookstoreModelLayer.OrderItems", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CustomerId");

                    b.Property<long>("UserId");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("OrderDB");
                });

            modelBuilder.Entity("BookstoreModelLayer.UserRegistration", b =>
                {
                    b.Property<long>("UserId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("email");

                    b.Property<string>("firstName");

                    b.Property<string>("lastName");

                    b.Property<string>("password");

                    b.Property<string>("phone");

                    b.Property<string>("role");

                    b.HasKey("UserId");

                    b.ToTable("UserDB");
                });

            modelBuilder.Entity("BookstoreModelLayer.WishList", b =>
                {
                    b.Property<int>("WishId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("BookId");

                    b.Property<long>("UserId");

                    b.HasKey("WishId");

                    b.ToTable("WishDB");
                });

            modelBuilder.Entity("BookstoreModelLayer.BookCart", b =>
                {
                    b.HasOne("BookstoreModelLayer.OrderItems")
                        .WithMany("Orders")
                        .HasForeignKey("OrderItemsOrderId");
                });

            modelBuilder.Entity("BookstoreModelLayer.OrderItems", b =>
                {
                    b.HasOne("BookstoreModelLayer.CustomerDetails", "customer")
                        .WithMany()
                        .HasForeignKey("CustomerId");
                });
#pragma warning restore 612, 618
        }
    }
}
